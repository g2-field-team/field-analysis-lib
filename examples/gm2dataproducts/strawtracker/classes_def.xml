<!--  art::Wrapper lines need only top level data product objects  -->

<lcgdict>
    <!-- For WireID - note that using the typedef will not work here-->
    <class name="gm2strawtracker::WireID"/>
    <class name="std::vector< gm2strawtracker::WireID >"/>

    <!-- For ValueWithError - note that using the typedef will not work here-->
    <class name="gm2strawtracker::ValueWithError"/>

    <!-- For Line - note that using the typedef will not work here-->
    <class name="gm2strawtracker::Line"/>
    <class name="std::vector< gm2strawtracker::Line >"/>

    <!-- For Circle - note that using the typedef will not work here-->
    <class name="gm2strawtracker::Circle"/>
    <class name="std::vector< gm2strawtracker::Circle >"/>

    <!-- For Helix - note that using the typedef will not work here-->
    <class name="gm2strawtracker::Helix"/>
    <class name="std::vector< gm2strawtracker::Helix >"/>

    <!-- For SeedNode - note that using the typedef will not work here-->
    <class name="gm2strawtracker::SeedNode"/>
    <class name="std::vector< gm2strawtracker::SeedNode >"/>

    <!-- For StrawMCDigits - note that using the typedef will not work here-->
    <class name="gm2strawtracker::StrawMCDigit"/>
    <class name="std::vector< gm2strawtracker::StrawMCDigit >"/>

    <!-- For StrawRawDigits -->
    <class name="gm2strawtracker::StrawRawDigitArtRecord"/>
    <class name="gm2strawtracker::StrawRawDigitArtRecord::ChannelID"/>
    <class name="std::vector< gm2strawtracker::StrawRawDigitArtRecord >"/>
    <class name="art::Wrapper< gm2strawtracker::StrawRawDigitArtRecord >"/>
    <class name="art::Wrapper< std::vector< gm2strawtracker::StrawRawDigitArtRecord > >"/>
    <class name="art::Ptr< gm2strawtracker::StrawRawDigitArtRecord >"/>
    <class name="std::vector< art::Ptr< gm2strawtracker::StrawRawDigitArtRecord > >"/>

    <!-- For StrawDigits - note that using the typedef will not work here-->
    <class name="gm2strawtracker::StrawDigitArtRecord"/>
    <class name="std::vector< gm2strawtracker::StrawDigitArtRecord >"/>
    <class name="art::Wrapper< gm2strawtracker::StrawDigitArtRecord >"/>
    <class name="art::Wrapper< std::vector< gm2strawtracker::StrawDigitArtRecord > >"/>
    <class name="art::Ptr< gm2strawtracker::StrawDigitArtRecord >"/>
    <class name="std::vector< art::Ptr< gm2strawtracker::StrawDigitArtRecord > >"/>

    <!-- For StrawTimeIsland - note that using the typedef will not work here-->
    <class name="gm2strawtracker::StrawTimeIslandArtRecord"/>
    <class name="std::vector< gm2strawtracker::StrawTimeIslandArtRecord >"/>
    <class name="art::Wrapper< gm2strawtracker::StrawTimeIslandArtRecord >"/>
    <class name="art::Wrapper< std::vector< gm2strawtracker::StrawTimeIslandArtRecord > >"/>
    <class name="art::Ptr< gm2strawtracker::StrawTimeIslandArtRecord >"/>
    <class name="std::vector< art::Ptr< gm2strawtracker::StrawTimeIslandArtRecord > >"/>

    <!-- For StrawClusters - note that using the typedef will not work here-->
    <class name="gm2strawtracker::StrawClusterArtRecord"/>
    <class name="std::vector< gm2strawtracker::StrawClusterArtRecord >"/>
    <class name="art::Wrapper< gm2strawtracker::StrawClusterArtRecord >"/>
    <class name="art::Wrapper< std::vector< gm2strawtracker::StrawClusterArtRecord > >"/>
    <class name="art::Ptr< gm2strawtracker::StrawClusterArtRecord >"/>
    <class name="std::vector< art::Ptr< gm2strawtracker::StrawClusterArtRecord > >"/>

    <!-- For StrawSeeds - note that using the typedef will not work here-->
    <class name="gm2strawtracker::StrawSeedArtRecord"/>
    <class name="std::vector< gm2strawtracker::StrawSeedArtRecord >"/>
    <class name="art::Wrapper< gm2strawtracker::StrawSeedArtRecord >"/>
    <class name="art::Wrapper< std::vector< gm2strawtracker::StrawSeedArtRecord > >"/>
    <class name="art::Ptr< gm2strawtracker::StrawSeedArtRecord >"/>
    <class name="std::vector< art::Ptr< gm2strawtracker::StrawSeedArtRecord > >"/>
    <class name="art::Assns< gm2strawtracker::StrawDigitArtRecord, gm2strawtracker::StrawClusterArtRecord, void >"/>

    <!-- For TrackState - note that using the typedef will not work here-->
    <class name="gm2strawtracker::TrackStateArtRecord"/>
    <class name="std::vector< gm2strawtracker::TrackStateArtRecord >"/>
    <class name="art::Wrapper< gm2strawtracker::TrackStateArtRecord >"/>
    <class name="art::Wrapper< std::vector< gm2strawtracker::TrackStateArtRecord > >"/>
    <class name="art::Ptr< gm2strawtracker::TrackStateArtRecord >"/>
    <class name="std::vector< art::Ptr< gm2strawtracker::TrackStateArtRecord > >"/>

    <!-- For TrackCandidates - note that using the typedef will not work here-->
    <class name="gm2strawtracker::TrackCandidateArtRecord"/>
    <class name="std::vector< gm2strawtracker::TrackCandidateArtRecord >"/>
    <class name="art::Wrapper< gm2strawtracker::TrackCandidateArtRecord >"/>
    <class name="art::Wrapper< std::vector< gm2strawtracker::TrackCandidateArtRecord > >"/>
    <class name="art::Ptr< gm2strawtracker::TrackCandidateArtRecord >"/>
    <class name="std::vector< art::Ptr< gm2strawtracker::TrackCandidateArtRecord > >"/>

    <!-- For Tracks - note that using the typedef will not work here-->
    <class name="gm2strawtracker::TrackArtRecord"/>
    <class name="std::vector< gm2strawtracker::TrackArtRecord >"/>
    <class name="art::Wrapper< gm2strawtracker::TrackArtRecord >"/>
    <class name="art::Wrapper< std::vector< gm2strawtracker::TrackArtRecord > >"/>
    <class name="art::Ptr< gm2strawtracker::TrackArtRecord >"/>
    <class name="std::vector< art::Ptr< gm2strawtracker::TrackArtRecord > >"/>

    <!-- For Vertices - note that using the typedef will not work here-->
    <class name="gm2strawtracker::DecayVertexArtRecord"/>
    <class name="std::vector< gm2strawtracker::DecayVertexArtRecord >"/>
    <class name="art::Wrapper< gm2strawtracker::DecayVertexArtRecord >"/>
    <class name="art::Wrapper< std::vector< gm2strawtracker::DecayVertexArtRecord > >"/>
    <class name="art::Ptr< gm2strawtracker::DecayVertexArtRecord >"/>
    <class name="std::vector< art::Ptr< gm2strawtracker::DecayVertexArtRecord > >"/>

    <!-- For the vector of booleans -->
    <class name="std::vector<bool>"/>

    <!-- For SMatrix -->
    <class name="ROOT::Math::MatRepStd<double,3,3>"/>
    <class name="ROOT::Math::MatRepStd<double,5,5>"/>
    <class name="ROOT::Math::SMatrix< double,3,3,ROOT::Math::MatRepStd<double,3,3> >"/>
    <class name="ROOT::Math::SMatrix< double,5,5,ROOT::Math::MatRepStd<double,5,5> >"/>

</lcgdict>
